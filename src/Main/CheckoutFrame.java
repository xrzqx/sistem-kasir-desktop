/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Main;

//import com.mindfusion.common.ChangeListener;
import java.awt.Color;
import java.awt.Font;
import java.awt.event.ActionListener;
import java.awt.event.ComponentAdapter;
import java.awt.event.ComponentEvent;
import java.awt.event.KeyEvent;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.sql.Connection;
import java.sql.SQLException;
import java.text.NumberFormat;
import java.util.EventObject;
import java.util.Objects;
import javax.swing.ImageIcon;
import javax.swing.JComponent;
import javax.swing.JDialog;
import javax.swing.JFormattedTextField;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import static javax.swing.JOptionPane.DEFAULT_OPTION;
import javax.swing.JPasswordField;
import javax.swing.JTextField;
import javax.swing.SwingUtilities;
import javax.swing.UIManager;
import javax.swing.border.Border;
import javax.swing.border.LineBorder;
import javax.swing.event.ChangeEvent;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.text.Document;
import javax.swing.text.JTextComponent;

/**
 *
 * @author hp
 */
public class CheckoutFrame extends javax.swing.JFrame {

    private static Font font = new Font("Tahoma", Font.PLAIN, 20);

    /**
     * Creates new form CheckoutFrame
     */
    public CheckoutFrame() {
        initComponents();
//        Border border = UIManager.getBorder(jTextField1);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        getContentPane().setLayout(new java.awt.GridBagLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel1.setText("Nama : ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 0, 0);
        getContentPane().add(jLabel1, gridBagConstraints);

        jTextField1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jTextField1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jTextField1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextField1FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextField1FocusLost(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.ipadx = 250;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 0, 10);
        getContentPane().add(jTextField1, gridBagConstraints);

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel2.setText("Alamat : ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 0, 0);
        getContentPane().add(jLabel2, gridBagConstraints);

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel3.setText("No. Telp :  ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 0, 0);
        getContentPane().add(jLabel3, gridBagConstraints);

        jTextField3.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jTextField3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jTextField3.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextField3FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextField3FocusLost(evt);
            }
        });
        jTextField3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField3KeyTyped(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 2;
        gridBagConstraints.ipadx = 180;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 0, 10);
        getContentPane().add(jTextField3, gridBagConstraints);

        jTextArea1.setColumns(15);
        jTextArea1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jTextArea1.setLineWrap(true);
        jTextArea1.setRows(4);
        jTextArea1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jTextArea1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextArea1FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextArea1FocusLost(evt);
            }
        });
        jScrollPane1.setViewportView(jTextArea1);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 10, 10);
        getContentPane().add(jScrollPane1, gridBagConstraints);

        jButton1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButton1.setText("Bayar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 10, 10);
        getContentPane().add(jButton1, gridBagConstraints);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
//        JTextField firstName = new JTextField();
//        firstName.setFont(font);

        if (jTextField1.getText() == null || jTextField1.getText().isEmpty() || jTextField1.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(null, "silahkan mengisi ulang data kembali");
        } else if (jTextField3.getText() == null || jTextField3.getText().isEmpty() || jTextField3.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(null, "silahkan mengisi ulang data kembali");
        } else if (jTextArea1.getText() == null || jTextField3.getText().isEmpty() || jTextField3.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(null, "silahkan mengisi ulang data kembali");
        } else {
            JLabel judul = new JLabel();
            judul.setFont(font);
            judul.setText("Uang Bayar");

            JFormattedTextField editor;
            NumberFormat format = NumberFormat.getIntegerInstance();
            format.setGroupingUsed(true);
            editor = new JFormattedTextField(format);
            editor.setVerifyInputWhenFocusTarget(false);
            editor.setFont(font);
            editor.setBorder(new LineBorder(Color.BLACK));

            editor.addComponentListener(new ComponentAdapter() {
                public void componentShown(ComponentEvent ce) {
                    editor.requestFocusInWindow();
                }
            });

            final JComponent[] inputs = new JComponent[]{
                //            judul,
                editor
            };

            ImageIcon icon = new ImageIcon("src/icons8-question-mark-32.png");
            Object[] options = {"CASH"};
            JOptionPane jop = new JOptionPane(editor, JOptionPane.ERROR_MESSAGE, 0, icon, options, options[0]);

            JDialog dialog = new JDialog(this, "Uang Bayar", true);
//        dialog.setDefaultCloseOperation(JDialog.DO_NOTHING_ON_CLOSE);
            dialog.setContentPane(jop);

            jop.addPropertyChangeListener(new PropertyChangeListener() {
                @Override
                public void propertyChange(PropertyChangeEvent evt) {
                    if (isVisible() && JOptionPane.VALUE_PROPERTY.equals(evt.getPropertyName())) {
                        Object value = jop.getValue();
//                    jop.getMessage();
                        JFormattedTextField editor = (JFormattedTextField) jop.getMessage();
//                    System.out.println(editor.getValue());
//                    if (value == JOptionPane.UNINITIALIZED_VALUE) {
//                        //ignore reset
//                        return;
//                    }

                        if (jop.getValue().equals(options[0])) {
                            dialog.dispose();
//                        JOptionPane.showMessageDialog(null, "Total Kembalian");

                            long total = (long) editor.getValue() - pinDataset.hargatotal;
                            JLabel label = new JLabel(String.format("%,d", total));
                            label.setFont(font);
                            JOptionPane.showMessageDialog(null, label, "Uang Kembalian", JOptionPane.INFORMATION_MESSAGE);
//                        int x = JOptionPane.showConfirmDialog(null, label,
//                "Uang Kembalian", JOptionPane.OK_OPTION, JOptionPane.QUESTION_MESSAGE);
                            String nama = jTextField1.getText();
                            String tlp = jTextField3.getText();
                            String almt = jTextArea1.getText();
                            String sql = "INSERT INTO `mydb`.`pembelian` (`namaPembeli`, `alamatPembeli`, `telpPembeli`,`jumlahBarang`, `barang_idbarang`, `barang_kategori_idkategori`) "
                                    + "VALUES ('" + nama + "', '" + almt + "', '" + tlp + "', ?, ?, ?);";
                            String sql2 = "UPDATE barang SET stockBarang = ? WHERE idbarang = ? ;";

                            java.sql.Connection conn;
                            try {
                                conn = (Connection) Config.configDB();
                                java.sql.PreparedStatement pstm = conn.prepareStatement(sql);
                                java.sql.PreparedStatement pstm2 = conn.prepareStatement(sql2);
                                for (int i = 0; i < pinDataset.getSize(); i++) {
                                    Object[] temp = pinDataset.getRowValue(i);
                                    String sql3 = "SELECT stockBarang from barang WHERE idbarang = " + temp[0] + ";";
                                    java.sql.Statement stm = conn.createStatement();
                                    java.sql.ResultSet res = stm.executeQuery(sql3);
                                    int stocktemp = 0;
                                    while (res.next()) {
                                        stocktemp = res.getInt(1);
                                        System.out.println(stocktemp);
                                    }
//                                for (Object temp1 : temp) {
//                                    System.out.println(temp1.toString());
//                                }
                                    if (temp[3] instanceof Integer) {
                                        pstm.setInt(1, (int) temp[3]);
                                        pstm2.setInt(1, stocktemp - (int) temp[3]);

                                    }
                                    if (temp[3] instanceof Long) {
                                        pstm.setLong(1, (long) temp[3]);
                                        pstm2.setInt(1, (int) (stocktemp - (long) temp[3]));
                                    }
                                    pstm.setInt(2, (int) temp[0]);
                                    pstm2.setInt(2, (int)temp[0]);
                                    pstm.setInt(3, (int) temp[6]);
                                    pstm.executeUpdate();
                                    pstm2.executeUpdate();
                                    stm.close();
                                    res.close();
                                }

                                pstm.close();
                                pstm2.close();
                            } catch (SQLException ex) {
//                            Logger.getLogger(AddFrame.class.getName()).log(Level.SEVERE, null, ex);
                            }

                            pinDataset.clear();
                            dispose();
                        }
//                    if (jop.getValue().equals(options[1])) {
//                        dialog.dispose();
//                        JOptionPane.showMessageDialog(null, "option 2");
//                    }
                    }

                }
            });
            dialog.pack();
            dialog.setLocationRelativeTo(this);
            dialog.setVisible(true);

        }

//        JFormattedTextField editor;
//        NumberFormat format = NumberFormat.getIntegerInstance();
//        editor = new JFormattedTextField(format);
//        editor.setFont(font);
//        editor.setBorder(new LineBorder(Color.BLACK));
//        
//        final JComponent[] inputs = new JComponent[]{
////            judul,
//            editor
//        };
//        
//
//        int result = JOptionPane.showConfirmDialog(null, inputs, "UANG BAYAR", JOptionPane.PLAIN_MESSAGE);
//        if (result == JOptionPane.OK_OPTION) {
//            System.out.println("You entered "
//                    + editor.getValue() );
//            if (editor.getValue() == null) {
////                JOptionPane jop = new JOptionPane(null,JOptionPane.ERROR_MESSAGE);
////                JOptionPane.showMessageDialog(null, "re");
//            }
//        } else {
//            System.out.println("User canceled / closed the dialog, result = " + result);
//        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jTextField1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField1FocusGained
        if (jTextField1.getText() != null) {
            jTextField1.setBorder(new LineBorder(Color.black, 1));
        }
    }//GEN-LAST:event_jTextField1FocusGained

    private void jTextField1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField1FocusLost
        if (jTextField1.getText() == null || jTextField1.getText().isEmpty() || jTextField1.getText().trim().isEmpty()) {
            jTextField1.setBorder(new LineBorder(Color.red, 1));
        }
    }//GEN-LAST:event_jTextField1FocusLost

    private void jTextField3FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField3FocusGained
        if (jTextField3.getText() != null) {
            jTextField3.setBorder(new LineBorder(Color.black, 1));
        }
    }//GEN-LAST:event_jTextField3FocusGained

    private void jTextField3FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField3FocusLost
        if (jTextField3.getText() == null || jTextField3.getText().isEmpty() || jTextField3.getText().trim().isEmpty()) {
            jTextField3.setBorder(new LineBorder(Color.red, 1));
        }
    }//GEN-LAST:event_jTextField3FocusLost

    private void jTextArea1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextArea1FocusGained
        if (jTextArea1.getText() != null) {
            jTextArea1.setBorder(new LineBorder(Color.black, 1));
        }
    }//GEN-LAST:event_jTextArea1FocusGained

    private void jTextArea1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextArea1FocusLost
        if (jTextArea1.getText() == null || jTextArea1.getText().isEmpty() || jTextArea1.getText().trim().isEmpty()) {
            jTextArea1.setBorder(new LineBorder(Color.red, 1));
        }
    }//GEN-LAST:event_jTextArea1FocusLost

    private void jTextField3KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField3KeyTyped
        char c = evt.getKeyChar();
        if (!(Character.isDigit(c))) {
            evt.consume();
        }
    }//GEN-LAST:event_jTextField3KeyTyped

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CheckoutFrame.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CheckoutFrame.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CheckoutFrame.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CheckoutFrame.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CheckoutFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField3;
    // End of variables declaration//GEN-END:variables
}
